{"ast":null,"code":"c;\n\n// const ThemeContext=createContext();\n\n// export const useTheme =()=>{\n//     const context=useContext(ThemeContext);\n//     if(!context){\n//         throw new Error('useTheme must be used within a ThemeProvider');\n//     }\n//     return context;\n\n// };\n// export const ThemeProvider=({children})=>{\n//     const [theme, setTheme]=useState('light');\n//     const toggleTheme=()=>{\n//         setTheme((prevTheme) => (prevTheme ==='light' ? 'dark' : 'light'));\n//     };\n//     return(\n//         <ThemeContext.Provider value={{theme,toggleTheme}}>\n//             {children}\n//         </ThemeContext.Provider>\n//     );\n\n// };","map":{"version":3,"names":["c"],"sources":["C:/Project React/ex5/src/ThemeContext.js"],"sourcesContent":["c\n\n\n\n\n\n// const ThemeContext=createContext();\n\n// export const useTheme =()=>{\n//     const context=useContext(ThemeContext);\n//     if(!context){\n//         throw new Error('useTheme must be used within a ThemeProvider');\n//     }\n//     return context;\n\n// };\n// export const ThemeProvider=({children})=>{\n//     const [theme, setTheme]=useState('light');\n//     const toggleTheme=()=>{\n//         setTheme((prevTheme) => (prevTheme ==='light' ? 'dark' : 'light'));\n//     };\n//     return(\n//         <ThemeContext.Provider value={{theme,toggleTheme}}>\n//             {children}\n//         </ThemeContext.Provider>\n//     );\n\n\n// };"],"mappings":"AAAAA,CAAC;;AAMD;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA"},"metadata":{},"sourceType":"module","externalDependencies":[]}