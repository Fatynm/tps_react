{"ast":null,"code":"var _jsxFileName = \"C:\\\\Project React\\\\ex5\\\\src\\\\ThemedButton.js\",\n  _s = $RefreshSig$();\nimport { useTheme } from './ThemeContext';\nimport ThemedMessage from './ThemedMessage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ThemedButton = () => {\n  _s();\n  const {\n    theme,\n    toggleTheme,\n    backgroundColor\n  } = useTheme();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: 'center',\n      marginTop: '0px',\n      transition: 'background-color 0.5s',\n      backgroundColor,\n      minHeight: '300vh'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      style: {\n        backgroundColor: theme === 'light' ? 'orange' : 'yellow',\n        color: theme === 'light' ? 'white' : 'black',\n        marginTop: '100px',\n        width: 200,\n        height: 100,\n        fontSize: '20px',\n        fontWeight: 'bold'\n      },\n      onClick: toggleTheme,\n      children: \"Toggle Theme\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ThemedMessage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 9\n  }, this);\n};\n_s(ThemedButton, \"5tFnsToD+8xLED+ShmgzIaREXlY=\", false, function () {\n  return [useTheme];\n});\n_c = ThemedButton;\nexport default ThemedButton;\nvar _c;\n$RefreshReg$(_c, \"ThemedButton\");","map":{"version":3,"names":["useTheme","ThemedMessage","jsxDEV","_jsxDEV","ThemedButton","_s","theme","toggleTheme","backgroundColor","style","textAlign","marginTop","transition","minHeight","children","color","width","height","fontSize","fontWeight","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Project React/ex5/src/ThemedButton.js"],"sourcesContent":["import { useTheme } from './ThemeContext';\nimport ThemedMessage from './ThemedMessage';\n\n\nconst ThemedButton = () =>{\n    const{theme,toggleTheme,backgroundColor}=useTheme();\n    return(\n        <div  style={{\n            textAlign: 'center',\n              marginTop: '0px',\n              transition: 'background-color 0.5s',\n              backgroundColor,\n              minHeight: '300vh',  }}>\n        <button\n        style={{backgroundColor: theme ==='light' ? 'orange' : 'yellow',\n        color: theme=== 'light' ? 'white' :  'black',marginTop:'100px', width:200, height:100,fontSize:'20px',fontWeight:'bold'}}\n        onClick={toggleTheme}>\n            Toggle Theme\n        </button>\n        <ThemedMessage/>\n       </div>\n    \n    );\n};\nexport default ThemedButton;"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,gBAAgB;AACzC,OAAOC,aAAa,MAAM,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG5C,MAAMC,YAAY,GAAGA,CAAA,KAAK;EAAAC,EAAA;EACtB,MAAK;IAACC,KAAK;IAACC,WAAW;IAACC;EAAe,CAAC,GAACR,QAAQ,CAAC,CAAC;EACnD,oBACIG,OAAA;IAAMM,KAAK,EAAE;MACTC,SAAS,EAAE,QAAQ;MACjBC,SAAS,EAAE,KAAK;MAChBC,UAAU,EAAE,uBAAuB;MACnCJ,eAAe;MACfK,SAAS,EAAE;IAAU,CAAE;IAAAC,QAAA,gBAC7BX,OAAA;MACAM,KAAK,EAAE;QAACD,eAAe,EAAEF,KAAK,KAAI,OAAO,GAAG,QAAQ,GAAG,QAAQ;QAC/DS,KAAK,EAAET,KAAK,KAAI,OAAO,GAAG,OAAO,GAAI,OAAO;QAACK,SAAS,EAAC,OAAO;QAAEK,KAAK,EAAC,GAAG;QAAEC,MAAM,EAAC,GAAG;QAACC,QAAQ,EAAC,MAAM;QAACC,UAAU,EAAC;MAAM,CAAE;MACzHC,OAAO,EAAEb,WAAY;MAAAO,QAAA,EAAC;IAEtB;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACTrB,OAAA,CAACF,aAAa;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACZ,CAAC;AAGb,CAAC;AAACnB,EAAA,CAnBID,YAAY;EAAA,QAC2BJ,QAAQ;AAAA;AAAAyB,EAAA,GAD/CrB,YAAY;AAoBlB,eAAeA,YAAY;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}